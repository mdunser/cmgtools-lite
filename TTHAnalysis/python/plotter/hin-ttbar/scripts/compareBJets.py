import ROOT


ROOT.gStyle.SetOptStat(0)
infile = ROOT.TFile("test.root",'read')

nom    = ROOT.TH1F('bjets' , 'n_{b-tags} with systematic variations'      , 4, -0.5, 3.5); nom    .SetLineWidth(2); nom    .SetLineColor(ROOT.kBlack)
jecup  = ROOT.TH1F('jecup' , 'jecup' , 4, -0.5, 3.5); jecup  .SetLineWidth(2); jecup  .SetLineColor(ROOT.kAzure+8)
jecdn  = ROOT.TH1F('jecdn' , 'jecdn' , 4, -0.5, 3.5); jecdn  .SetLineWidth(2); jecdn  .SetLineColor(ROOT.kAzure-4)
jerup  = ROOT.TH1F('jerup' , 'jerup' , 4, -0.5, 3.5); jerup  .SetLineWidth(2); jerup  .SetLineColor(ROOT.kRed+1)
jerdn  = ROOT.TH1F('jerdn' , 'jerdn' , 4, -0.5, 3.5); jerdn  .SetLineWidth(2); jerdn  .SetLineColor(ROOT.kRed-4)
bup    = ROOT.TH1F('bup'   , 'bup'   , 4, -0.5, 3.5); bup    .SetLineWidth(2); bup    .SetLineColor(ROOT.kGreen-4)
bdn    = ROOT.TH1F('bdn'   , 'bdn'   , 4, -0.5, 3.5); bdn    .SetLineWidth(2); bdn    .SetLineColor(ROOT.kGreen-2)
udsgup = ROOT.TH1F('udsgup', 'udsgup', 4, -0.5, 3.5); udsgup .SetLineWidth(2); udsgup .SetLineColor(ROOT.kOrange)
udsgdn = ROOT.TH1F('udsgdn', 'udsgdn', 4, -0.5, 3.5); udsgdn .SetLineWidth(2); udsgdn .SetLineColor(ROOT.kOrange-3)
quendn = ROOT.TH1F('quendn', 'quendn', 4, -0.5, 3.5); quendn .SetLineWidth(2); quendn .SetLineColor(ROOT.kGray)


tree = infile.Get('tree')

tree.Draw('nbjet_sel>>bjets')
tree.Draw('nbjet_sel_jecup>>jecup')
tree.Draw('nbjet_sel_jecdn>>jecdn')
tree.Draw('nbjet_sel_jerup>>jerup')
tree.Draw('nbjet_sel_jerdn>>jerdn')
tree.Draw('nbjet_sel_bup>>bup'  )
tree.Draw('nbjet_sel_bdn>>bdn'  )
tree.Draw('nbjet_sel_udsgup>>udsgup')
tree.Draw('nbjet_sel_udsgdn>>udsgdn')
tree.Draw('nbjet_sel_quenchdn>>quendn')

c1 = ROOT.TCanvas('foo','', 800, 800)

nom    .Scale(1./nom    .Integral())
jecup  .Scale(1./jecup  .Integral())
jecdn  .Scale(1./jecdn  .Integral())
jerup  .Scale(1./jerup  .Integral())
jerdn  .Scale(1./jerdn  .Integral())
bup    .Scale(1./bup    .Integral())
bdn    .Scale(1./bdn    .Integral())
udsgup .Scale(1./udsgup .Integral())
udsgdn .Scale(1./udsgdn .Integral())
quendn .Scale(1./quendn .Integral())
nom    .Scale(1./nom    .Integral())

nom.GetYaxis().SetRangeUser(0, 0.75)
nom.GetXaxis().SetTitle('n_{b-tags}')
nom.GetYaxis().SetTitle('pdf')

leg = ROOT.TLegend(0.6, 0.45, 0.87, 0.87)
leg.SetLineStyle(0)
leg.SetLineWidth(0)
leg.AddEntry(nom  , 'nominal t#bar{t} (mixed)', 'l')
leg.AddEntry(jecup, 'JEC up'  , 'l')
leg.AddEntry(jecdn, 'JEC down', 'l')
leg.AddEntry(jerup, 'JER up'  , 'l')
leg.AddEntry(jerdn, 'JER down', 'l')
leg.AddEntry(bup, 'b-tagging (b) up'  , 'l')
leg.AddEntry(bdn, 'b-tagging (b) down', 'l')
leg.AddEntry(udsgup, 'b-tagging (udsg) up'  , 'l')
leg.AddEntry(udsgdn, 'b-tagging (udsg) down', 'l')
leg.AddEntry(quendn, 'quenching down', 'l')

nom    .Draw('hist  ')
jecup  .Draw('hist same ')
jecdn  .Draw('hist same ')
jerup  .Draw('hist same ')
jerdn  .Draw('hist same ')
bup    .Draw('hist same ')
bdn    .Draw('hist same ')
udsgup .Draw('hist same ')
udsgdn .Draw('hist same ')
quendn .Draw('hist same ')
nom    .Draw('hist same ')

leg.Draw('same')

c1.SaveAs('~/www/private/heavyIons/plots/jetPlots/nbSystematics.png')
c1.SaveAs('~/www/private/heavyIons/plots/jetPlots/nbSystematics.pdf')
